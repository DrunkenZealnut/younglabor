/**
 * Board Templates Summernote Callout ÌîåÎü¨Í∑∏Ïù∏
 * Phase 2: Í≤ΩÍ≥†/Ï†ïÎ≥¥/ÏÑ±Í≥µ/ÏóêÎü¨ Î∞ïÏä§ Í∏∞Îä•
 */

(function() {
    'use strict';
    
    function waitForBase(callback) {
        if (window.BoardTemplatesPluginBase && window.btRegisterPlugin) {
            callback();
        } else {
            setTimeout(() => waitForBase(callback), 100);
        }
    }
    
    waitForBase(function() {
        btRegisterPlugin('callout', {
            langPath: 'content.callout',
            
            initialize: function(context) {
                this.context = context;
                this.log('Callout ÌîåÎü¨Í∑∏Ïù∏ Ï¥àÍ∏∞Ìôî');
                
                this.calloutTypes = [
                    { 
                        id: 'info', 
                        icon: '‚ÑπÔ∏è', 
                        title: 'Ï†ïÎ≥¥', 
                        color: '#3B82F6',
                        bgColor: '#EFF6FF',
                        borderColor: '#DBEAFE'
                    },
                    { 
                        id: 'warning', 
                        icon: '‚ö†Ô∏è', 
                        title: 'Ï£ºÏùò', 
                        color: '#F59E0B',
                        bgColor: '#FFFBEB',
                        borderColor: '#FED7AA'
                    },
                    { 
                        id: 'success', 
                        icon: '‚úÖ', 
                        title: 'ÏÑ±Í≥µ', 
                        color: '#10B981',
                        bgColor: '#F0FDF4',
                        borderColor: '#BBF7D0'
                    },
                    { 
                        id: 'error', 
                        icon: '‚ùå', 
                        title: 'Ïò§Î•ò', 
                        color: '#EF4444',
                        bgColor: '#FEF2F2',
                        borderColor: '#FECACA'
                    },
                    { 
                        id: 'tip', 
                        icon: 'üí°', 
                        title: 'ÌåÅ', 
                        color: '#8B5CF6',
                        bgColor: '#FAF5FF',
                        borderColor: '#E9D5FF'
                    },
                    { 
                        id: 'quote', 
                        icon: 'üí¨', 
                        title: 'Ïù∏Ïö©', 
                        color: '#6B7280',
                        bgColor: '#F9FAFB',
                        borderColor: '#E5E7EB'
                    }
                ];
                
                this.addStyles(`
                    /* Callout ÎìúÎ°≠Îã§Ïö¥ Ïä§ÌÉÄÏùº */
                    .note-btn-callout {
                        background: none !important;
                        border: none !important;
                        cursor: pointer;
                    }
                    .note-btn-callout:hover {
                        background: var(--editor-accent, #FED7AA) !important;
                    }
                    .note-btn-callout.active {
                        background: var(--editor-primary, #FBBF24) !important;
                        color: var(--editor-text, #111827) !important;
                    }
                    
                    /* Callout ÎìúÎ°≠Îã§Ïö¥ Î©îÎâ¥ */
                    .callout-dropdown {
                        min-width: 280px;
                        padding: 8px 0;
                        background: white;
                        border: 1px solid #e5e7eb;
                        border-radius: 8px;
                        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
                    }
                    
                    .callout-option {
                        display: flex;
                        align-items: center;
                        padding: 10px 16px;
                        cursor: pointer;
                        transition: background-color 0.2s;
                        border: none;
                        background: none;
                        width: 100%;
                        text-align: left;
                        font-size: 14px;
                    }
                    
                    .callout-option:hover {
                        background: #f3f4f6;
                    }
                    
                    .callout-option-icon {
                        font-size: 18px;
                        margin-right: 12px;
                        width: 24px;
                        text-align: center;
                    }
                    
                    .callout-option-content {
                        flex: 1;
                    }
                    
                    .callout-option-title {
                        font-weight: 600;
                        margin-bottom: 2px;
                    }
                    
                    .callout-option-desc {
                        font-size: 12px;
                        color: #6b7280;
                    }
                    
                    /* Callout Ïª¥Ìè¨ÎÑåÌä∏ Ïä§ÌÉÄÏùº */
                    .bt-callout {
                        margin: 16px 0;
                        border-radius: 8px;
                        border-left: 4px solid;
                        padding: 16px 20px;
                        background: white;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
                        position: relative;
                        transition: all 0.2s ease;
                    }
                    
                    .bt-callout:hover {
                        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
                    }
                    
                    .bt-callout-header {
                        display: flex;
                        align-items: center;
                        margin-bottom: 8px;
                        font-weight: 600;
                        font-size: 15px;
                    }
                    
                    .bt-callout-icon {
                        font-size: 18px;
                        margin-right: 8px;
                    }
                    
                    .bt-callout-content {
                        line-height: 1.6;
                        color: #374151;
                    }
                    
                    .bt-callout-content p:first-child {
                        margin-top: 0;
                    }
                    
                    .bt-callout-content p:last-child {
                        margin-bottom: 0;
                    }
                    
                    /* ÌÉÄÏûÖÎ≥Ñ Ïä§ÌÉÄÏùº */
                    .bt-callout.info {
                        background: #EFF6FF;
                        border-left-color: #3B82F6;
                        color: #1E40AF;
                    }
                    .bt-callout.info .bt-callout-header {
                        color: #1E40AF;
                    }
                    
                    .bt-callout.warning {
                        background: #FFFBEB;
                        border-left-color: #F59E0B;
                        color: #92400E;
                    }
                    .bt-callout.warning .bt-callout-header {
                        color: #92400E;
                    }
                    
                    .bt-callout.success {
                        background: #F0FDF4;
                        border-left-color: #10B981;
                        color: #065F46;
                    }
                    .bt-callout.success .bt-callout-header {
                        color: #065F46;
                    }
                    
                    .bt-callout.error {
                        background: #FEF2F2;
                        border-left-color: #EF4444;
                        color: #991B1B;
                    }
                    .bt-callout.error .bt-callout-header {
                        color: #991B1B;
                    }
                    
                    .bt-callout.tip {
                        background: #FAF5FF;
                        border-left-color: #8B5CF6;
                        color: #5B21B6;
                    }
                    .bt-callout.tip .bt-callout-header {
                        color: #5B21B6;
                    }
                    
                    .bt-callout.quote {
                        background: #F9FAFB;
                        border-left-color: #6B7280;
                        color: #374151;
                    }
                    .bt-callout.quote .bt-callout-header {
                        color: #4B5563;
                    }
                    
                    /* ÏÇ≠Ï†ú Î≤ÑÌäº */
                    .bt-callout-delete {
                        position: absolute;
                        top: 8px;
                        right: 8px;
                        background: rgba(255, 255, 255, 0.8);
                        border: 1px solid rgba(0, 0, 0, 0.1);
                        border-radius: 4px;
                        width: 24px;
                        height: 24px;
                        cursor: pointer;
                        font-size: 12px;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        opacity: 0;
                        transition: opacity 0.2s;
                    }
                    
                    .bt-callout:hover .bt-callout-delete {
                        opacity: 1;
                    }
                    
                    .bt-callout-delete:hover {
                        background: white;
                        border-color: #ef4444;
                        color: #ef4444;
                    }
                    
                    /* Î∞òÏùëÌòï */
                    @media (max-width: 768px) {
                        .bt-callout {
                            margin: 12px 0;
                            padding: 12px 16px;
                        }
                        
                        .callout-dropdown {
                            min-width: 250px;
                        }
                        
                        .bt-callout-delete {
                            opacity: 1;
                        }
                    }
                `, 'callout-plugin-styles');
                
                // Ï†ÑÏó≠ ÏÇ≠Ï†ú Ìï®Ïàò Îì±Î°ù
                this.setupGlobalHandlers();
            },
            
            createButton: function(context) {
                const self = this;
                
                return {
                    tooltip: this.getTooltip(context, 'Callout (Ctrl+Shift+X)'),
                    click: function() {
                        self.showCalloutDropdown(context);
                    },
                    render: function() {
                        return '<button type="button" class="btn btn-light btn-sm note-btn-callout" ' +
                               'title="' + self.getTooltip(context, 'Callout (Ctrl+Shift+X)') + '" ' +
                               'tabindex="0">üì¢ Callout</button>';
                    }
                };
            },
            
            events: {
                'summernote.keydown': function(we, e) {
                    if (e.ctrlKey && e.shiftKey && e.keyCode === 88) { // Ctrl+Shift+X
                        e.preventDefault();
                        this.showCalloutDropdown(this.context);
                        return false;
                    }
                }
            },
            
            showCalloutDropdown: function(context) {
                const self = this;
                
                try {
                    // Í∏∞Ï°¥ ÎìúÎ°≠Îã§Ïö¥Ïù¥ ÏûàÏúºÎ©¥ Ï†úÍ±∞
                    $('.callout-dropdown').remove();
                    
                    // ÎìúÎ°≠Îã§Ïö¥ ÏÉùÏÑ±
                    const $dropdown = $('<div class="callout-dropdown">');
                    
                    this.calloutTypes.forEach(type => {
                        const $option = $(`
                            <button class="callout-option" data-type="${type.id}">
                                <span class="callout-option-icon">${type.icon}</span>
                                <div class="callout-option-content">
                                    <div class="callout-option-title">${type.title}</div>
                                    <div class="callout-option-desc">${this.getCalloutDescription(type.id)}</div>
                                </div>
                            </button>
                        `);
                        
                        $option.click(function() {
                            const calloutType = $(this).data('type');
                            self.insertCallout(context, calloutType);
                            $dropdown.remove();
                        });
                        
                        $dropdown.append($option);
                    });
                    
                    // ÎìúÎ°≠Îã§Ïö¥ ÏúÑÏπò Í≥ÑÏÇ∞
                    const $btn = $('.note-btn-callout');
                    if ($btn.length > 0) {
                        const btnOffset = $btn.offset();
                        $dropdown.css({
                            position: 'absolute',
                            left: btnOffset.left,
                            top: btnOffset.top + $btn.outerHeight() + 5,
                            zIndex: 9999
                        });
                    }
                    
                    // bodyÏóê Ï∂îÍ∞Ä
                    $('body').append($dropdown);
                    
                    // Ïô∏Î∂Ä ÌÅ¥Î¶≠ Ïãú Îã´Í∏∞
                    $(document).one('click.callout-dropdown', function(e) {
                        if (!$(e.target).closest('.callout-dropdown, .note-btn-callout').length) {
                            $dropdown.remove();
                        }
                    });
                    
                    this.log('Callout ÎìúÎ°≠Îã§Ïö¥ ÌëúÏãúÎê®');
                    
                } catch (error) {
                    this.handleError(error, 'showCalloutDropdown');
                }
            },
            
            getCalloutDescription: function(type) {
                const descriptions = {
                    'info': 'Ï†ïÎ≥¥ÎÇò ÏÑ§Î™ÖÏùÑ Í∞ïÏ°∞Ìï† Îïå',
                    'warning': 'Ï£ºÏùòÏÇ¨Ìï≠Ïù¥ÎÇò Í≤ΩÍ≥†Ìï† Îïå',
                    'success': 'ÏÑ±Í≥µÏù¥ÎÇò ÏôÑÎ£åÎ•º ÏïåÎ¶¥ Îïå',
                    'error': 'Ïò§Î•òÎÇò Ïã§Ìå®Î•º ÏïåÎ¶¥ Îïå',
                    'tip': 'ÌåÅÏù¥ÎÇò ÌûåÌä∏Î•º Ï†úÍ≥µÌï† Îïå',
                    'quote': 'Ïù∏Ïö©Ïù¥ÎÇò Ï∞∏Ï°∞Ìï† Îïå'
                };
                return descriptions[type] || '';
            },
            
            insertCallout: function(context, type) {
                try {
                    const typeConfig = this.calloutTypes.find(t => t.id === type);
                    if (!typeConfig) {
                        throw new Error(`Unknown callout type: ${type}`);
                    }
                    
                    const calloutId = 'callout_' + Date.now();
                    const selectedText = this.getSelectedText(context);
                    const content = selectedText || 'Ïó¨Í∏∞Ïóê ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî.';
                    
                    const html = `
                        <div class="bt-callout ${type}" id="${calloutId}">
                            <div class="bt-callout-header">
                                <span class="bt-callout-icon">${typeConfig.icon}</span>
                                <span>${typeConfig.title}</span>
                            </div>
                            <div class="bt-callout-content" contenteditable="true">
                                ${content}
                            </div>
                            <button class="bt-callout-delete" onclick="window.btRemoveCallout('${calloutId}')" title="ÏÇ≠Ï†ú">‚úï</button>
                        </div>
                        <p><br></p>
                    `;
                    
                    this.insertHTML(context, html);
                    
                    // ÏΩòÌÖêÏ∏† ÏòÅÏó≠Ïóê Ìè¨Ïª§Ïä§
                    setTimeout(() => {
                        const $content = $(`#${calloutId} .bt-callout-content`);
                        if ($content.length > 0) {
                            $content.focus();
                            if (selectedText) {
                                // Í∏∞Ï°¥ ÌÖçÏä§Ìä∏Í∞Ä ÏûàÏóàÎã§Î©¥ Ï†ÑÏ≤¥ ÏÑ†ÌÉù
                                const range = document.createRange();
                                range.selectNodeContents($content[0]);
                                const selection = window.getSelection();
                                selection.removeAllRanges();
                                selection.addRange(range);
                            }
                        }
                        this.focus(context);
                    }, 100);
                    
                    this.log(`${typeConfig.title} Callout ÏÇΩÏûÖ ÏôÑÎ£å`);
                    
                } catch (error) {
                    this.handleError(error, 'insertCallout');
                }
            },
            
            setupGlobalHandlers: function() {
                const self = this;
                
                // Ï†ÑÏó≠ ÏÇ≠Ï†ú Ìï®Ïàò
                window.btRemoveCallout = function(calloutId) {
                    if (confirm('Ïù¥ CalloutÏùÑ ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?')) {
                        $(`#${calloutId}`).remove();
                        self.log('Callout ÏÇ≠Ï†úÎê®');
                    }
                };
            },
            
            createHelp: function(context) {
                return {
                    title: 'Callout',
                    content: [
                        '<h4>Callout Í∏∞Îä•</h4>',
                        '<p>Ï†ïÎ≥¥, Í≤ΩÍ≥†, ÏÑ±Í≥µ, Ïò§Î•ò Îì±Ïùò Î©îÏãúÏßÄÎ•º Í∞ïÏ°∞ÌïòÏó¨ ÌëúÏãúÌï† Ïàò ÏûàÏäµÎãàÎã§.</p>',
                        '<ul>',
                        '<li><strong>Îã®Ï∂ïÌÇ§:</strong> Ctrl+Shift+X</li>',
                        '<li><strong>ÌÉÄÏûÖ:</strong> Ï†ïÎ≥¥, Ï£ºÏùò, ÏÑ±Í≥µ, Ïò§Î•ò, ÌåÅ, Ïù∏Ïö©</li>',
                        '<li><strong>Ìé∏Ïßë:</strong> Callout ÎÇ¥Ïö© ÏßÅÏ†ë Ìé∏Ïßë Í∞ÄÎä•</li>',
                        '<li><strong>ÏÇ≠Ï†ú:</strong> Ïö∞ÏÉÅÎã® X Î≤ÑÌäºÏúºÎ°ú ÏÇ≠Ï†ú</li>',
                        '</ul>',
                        '<h5>Callout ÌÉÄÏûÖÎ≥Ñ Ïö©ÎèÑ</h5>',
                        '<ul>',
                        '<li><strong>Ï†ïÎ≥¥ (‚ÑπÔ∏è):</strong> Ï∂îÍ∞Ä Ï†ïÎ≥¥ÎÇò ÏÑ§Î™Ö</li>',
                        '<li><strong>Ï£ºÏùò (‚ö†Ô∏è):</strong> Ï£ºÏùòÏÇ¨Ìï≠Ïù¥ÎÇò Í≤ΩÍ≥†</li>',
                        '<li><strong>ÏÑ±Í≥µ (‚úÖ):</strong> ÏÑ±Í≥µ Î©îÏãúÏßÄÎÇò ÏôÑÎ£å ÏïåÎ¶º</li>',
                        '<li><strong>Ïò§Î•ò (‚ùå):</strong> Ïò§Î•òÎÇò Î¨∏Ï†ú ÏÉÅÌô©</li>',
                        '<li><strong>ÌåÅ (üí°):</strong> Ïú†Ïö©Ìïú ÌåÅÏù¥ÎÇò ÌûåÌä∏</li>',
                        '<li><strong>Ïù∏Ïö© (üí¨):</strong> Ïù∏Ïö©Î¨∏Ïù¥ÎÇò Ï∞∏Ï°∞</li>',
                        '</ul>',
                        '<p><strong>ÌôúÏö©:</strong> Î¨∏ÏÑúÏùò Ï§ëÏöîÌïú ÎÇ¥Ïö©ÏùÑ ÏãúÍ∞ÅÏ†ÅÏúºÎ°ú Í∞ïÏ°∞ÌïòÏó¨ Í∞ÄÎèÖÏÑ±ÏùÑ ÎÜíÏùº Ïàò ÏûàÏäµÎãàÎã§.</p>'
                    ].join('')
                };
            }
        });
        
        if (typeof $ !== 'undefined' && $(document)) {
            $(document).trigger('board-templates-plugin-loaded', ['callout']);
        }
    });
    
})();