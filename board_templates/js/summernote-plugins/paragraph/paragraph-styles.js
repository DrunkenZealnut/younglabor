/**
 * Board Templates Summernote Î¨∏Îã® Ïä§ÌÉÄÏùº ÌîåÎü¨Í∑∏Ïù∏
 * Phase 2: Paragraph Styles Í∏∞Îä•
 */

(function() {
    'use strict';
    
    function waitForBase(callback) {
        if (window.BoardTemplatesPluginBase && window.btRegisterPlugin) {
            callback();
        } else {
            setTimeout(() => waitForBase(callback), 100);
        }
    }
    
    waitForBase(function() {
        btRegisterPlugin('paragraphStyles', {
            langPath: 'paragraph.styles',
            
            initialize: function(context) {
                this.context = context;
                this.log('Î¨∏Îã® Ïä§ÌÉÄÏùº ÌîåÎü¨Í∑∏Ïù∏ Ï¥àÍ∏∞Ìôî');
                
                // Î¨∏Îã® Ïä§ÌÉÄÏùº Ï†ïÏùò
                this.styles = [
                    {
                        name: 'Ïù∏Ïö©Íµ¨',
                        value: 'quote',
                        icon: '‚ùù',
                        css: {
                            'border-left': '4px solid var(--editor-primary, #FBBF24)',
                            'padding': '10px 15px',
                            'margin': '10px 0',
                            'background': 'var(--editor-background, #FFFBEB)',
                            'font-style': 'italic',
                            'position': 'relative'
                        }
                    },
                    {
                        name: 'ÏÜåÏ†úÎ™©',
                        value: 'subtitle',
                        icon: 'üìå',
                        css: {
                            'font-size': '1.2em',
                            'font-weight': 'bold',
                            'color': 'var(--editor-primary, #FBBF24)',
                            'border-bottom': '2px solid var(--editor-accent, #FED7AA)',
                            'padding-bottom': '5px',
                            'margin': '15px 0 10px 0'
                        }
                    },
                    {
                        name: 'Í∞ïÏ°∞ Î∞ïÏä§',
                        value: 'highlight-box',
                        icon: 'üîÜ',
                        css: {
                            'background': 'linear-gradient(135deg, var(--editor-accent, #FED7AA), var(--editor-background, #FFFBEB))',
                            'border': '1px solid var(--editor-border, #FDE68A)',
                            'border-radius': '8px',
                            'padding': '15px',
                            'margin': '10px 0',
                            'box-shadow': '0 2px 4px rgba(0,0,0,0.1)'
                        }
                    },
                    {
                        name: 'Ï†ïÎ≥¥ ÏïàÎÇ¥',
                        value: 'info',
                        icon: '‚ÑπÔ∏è',
                        css: {
                            'background': '#E0F2FE',
                            'border-left': '4px solid #0EA5E9',
                            'padding': '12px 15px',
                            'margin': '10px 0',
                            'border-radius': '0 4px 4px 0',
                            'position': 'relative'
                        }
                    },
                    {
                        name: 'Ï£ºÏùòÏÇ¨Ìï≠',
                        value: 'warning',
                        icon: '‚ö†Ô∏è',
                        css: {
                            'background': '#FEF3C7',
                            'border-left': '4px solid #F59E0B',
                            'padding': '12px 15px',
                            'margin': '10px 0',
                            'border-radius': '0 4px 4px 0',
                            'position': 'relative'
                        }
                    }
                ];
                
                this.addStyles(`
                    .note-btn-paragraphstyles {
                        background: none !important;
                        border: none !important;
                        cursor: pointer;
                    }
                    .note-btn-paragraphstyles:hover {
                        background: var(--editor-accent, #FED7AA) !important;
                    }
                    .note-btn-paragraphstyles.active {
                        background: var(--editor-primary, #FBBF24) !important;
                        color: var(--editor-text, #111827) !important;
                    }
                    .note-paragraphstyles-dropdown {
                        min-width: 200px;
                        max-height: 400px;
                        overflow-y: auto;
                    }
                    .note-paragraphstyle-item {
                        padding: 10px;
                        cursor: pointer;
                        display: block;
                        text-decoration: none;
                        color: #333;
                        border-bottom: 1px solid #eee;
                        transition: all 0.2s ease;
                    }
                    .note-paragraphstyle-item:hover {
                        background: var(--editor-accent, #FED7AA);
                        color: #333;
                        text-decoration: none;
                        transform: translateX(2px);
                    }
                    .note-paragraphstyle-item:last-child {
                        border-bottom: none;
                    }
                    .note-paragraphstyle-icon {
                        display: inline-block;
                        width: 20px;
                        margin-right: 8px;
                        text-align: center;
                    }
                    .note-paragraphstyle-preview {
                        font-size: 11px;
                        color: #666;
                        margin-top: 2px;
                        font-style: italic;
                    }
                    .note-paragraphstyle-clear {
                        background: #f8f8f8;
                        border: 1px dashed #ccc !important;
                        font-weight: bold;
                        text-align: center;
                    }
                `, 'paragraphstyles-plugin-styles');
            },
            
            createButton: function(context) {
                const self = this;
                
                return {
                    tooltip: this.getTooltip(context, 'Î¨∏Îã® Ïä§ÌÉÄÏùº (Ctrl+Shift+S)'),
                    render: function() {
                        return '<div class="note-btn-group btn-group">' +
                               '<button type="button" class="note-btn note-btn-paragraphstyles btn btn-light btn-sm dropdown-toggle" ' +
                               'data-bs-toggle="dropdown" title="' + self.getTooltip(context, 'Î¨∏Îã® Ïä§ÌÉÄÏùº (Ctrl+Shift+S)') + '" ' +
                               'tabindex="0">üé® Ïä§ÌÉÄÏùº</button>' +
                               '<div class="dropdown-menu note-paragraphstyles-dropdown">' +
                               self.createStylesMenu() +
                               '</div></div>';
                    }
                };
            },
            
            createStylesMenu: function() {
                let html = '';
                
                // Ïä§ÌÉÄÏùº Ï†úÍ±∞ ÏòµÏÖò
                html += '<a class="note-paragraphstyle-item note-paragraphstyle-clear" href="#" ' +
                       'data-event="paragraphStyles" data-value="clear" ' +
                       'title="Ïä§ÌÉÄÏùº Ï†úÍ±∞">' +
                       '<span class="note-paragraphstyle-icon">‚úñ</span>' +
                       'Í∏∞Î≥∏ Ïä§ÌÉÄÏùºÎ°ú Î≥ÄÍ≤Ω</a>';
                
                // Í∞Å Ïä§ÌÉÄÏùº ÏòµÏÖò
                this.styles.forEach(style => {
                    html += '<a class="note-paragraphstyle-item" href="#" ' +
                           'data-event="paragraphStyles" data-value="' + style.value + '" ' +
                           'title="' + style.name + '">' +
                           '<span class="note-paragraphstyle-icon">' + style.icon + '</span>' +
                           '<div>' + style.name + '</div>' +
                           '<div class="note-paragraphstyle-preview">' + this.getStyleDescription(style.value) + '</div>' +
                           '</a>';
                });
                
                return html;
            },
            
            getStyleDescription: function(styleValue) {
                const descriptions = {
                    'quote': 'Ïù∏Ïö©Î¨∏Ïù¥ÎÇò Ï§ëÏöîÌïú ÎßêÏùÑ Í∞ïÏ°∞',
                    'subtitle': 'ÏÜåÏ†úÎ™©Ïù¥ÎÇò ÏÑπÏÖò Ï†úÎ™©',
                    'highlight-box': 'Ï£ºÏöî ÎÇ¥Ïö©ÏùÑ Í∞ïÏ°∞ÌïòÎäî Î∞ïÏä§',
                    'info': 'Ïú†Ïö©Ìïú Ï†ïÎ≥¥ÎÇò ÌåÅ Ï†úÍ≥µ',
                    'warning': 'Ï£ºÏùòÌï† ÏÇ¨Ìï≠Ïù¥ÎÇò Í≤ΩÍ≥†'
                };
                return descriptions[styleValue] || '';
            },
            
            events: {
                'summernote.keydown': function(we, e) {
                    if (e.ctrlKey && e.shiftKey && e.keyCode === 83) { // Ctrl+Shift+S
                        e.preventDefault();
                        this.applyParagraphStyle(this.context, 'quote'); // Í∏∞Î≥∏Í∞í: Ïù∏Ïö©Íµ¨
                        return false;
                    }
                },
                
                'summernote.paragraphStyles': function(we, value) {
                    if (value === 'clear') {
                        this.clearParagraphStyle(this.context);
                    } else {
                        this.applyParagraphStyle(this.context, value);
                    }
                }
            },
            
            applyParagraphStyle: function(context, styleValue) {
                try {
                    const style = this.styles.find(s => s.value === styleValue);
                    if (!style) {
                        this.log('Ïïå Ïàò ÏóÜÎäî Ïä§ÌÉÄÏùº: ' + styleValue, 'WARNING');
                        return;
                    }
                    
                    if (this.hasSelection(context)) {
                        const selectedText = this.getSelectedText(context);
                        
                        // CSS Ïä§ÌÉÄÏùº Î¨∏ÏûêÏó¥ ÏÉùÏÑ±
                        const cssString = Object.entries(style.css)
                            .map(([prop, value]) => `${prop}: ${value}`)
                            .join('; ');
                        
                        // Ïä§ÌÉÄÏùºÏù¥ Ï†ÅÏö©Îêú divÎ°ú Í∞êÏã∏Í∏∞
                        const html = `<div class="bt-paragraph-style bt-${style.value}" style="${cssString}">${selectedText}</div>`;
                        this.insertHTML(context, html);
                        
                        this.log(`${style.name} Ïä§ÌÉÄÏùº Ï†ÅÏö©Îê®`, 'INFO');
                    } else {
                        alert('Î¨∏Îã® Ïä§ÌÉÄÏùºÏùÑ Ï†ÅÏö©Ìï† ÌÖçÏä§Ìä∏Î•º Î®ºÏ†Ä ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
                    }
                    
                    this.focus(context);
                    
                } catch (error) {
                    this.handleError(error, 'applyParagraphStyle');
                }
            },
            
            clearParagraphStyle: function(context) {
                try {
                    if (this.hasSelection(context)) {
                        const rng = context.invoke('createRange');
                        if (rng && rng.sc) {
                            // Î¨∏Îã® Ïä§ÌÉÄÏùºÏù¥ Ï†ÅÏö©Îêú Ïª®ÌÖåÏù¥ÎÑà Ï∞æÍ∏∞
                            const $container = $(rng.sc).closest('.bt-paragraph-style, div[style], blockquote');
                            if ($container.length > 0 && $container.hasClass('bt-paragraph-style')) {
                                // Ïä§ÌÉÄÏùº ÌÅ¥ÎûòÏä§ÏôÄ Ïù∏ÎùºÏù∏ Ïä§ÌÉÄÏùº Ï†úÍ±∞, ÎÇ¥Ïö©Îßå Ïú†ÏßÄ
                                const content = $container.html();
                                $container.replaceWith('<p>' + content + '</p>');
                                this.log('Î¨∏Îã® Ïä§ÌÉÄÏùº Ï†úÍ±∞Îê®', 'INFO');
                            } else {
                                this.log('Ï†úÍ±∞Ìï† Î¨∏Îã® Ïä§ÌÉÄÏùºÏù¥ ÏóÜÏäµÎãàÎã§', 'WARNING');
                            }
                        }
                    } else {
                        alert('Ïä§ÌÉÄÏùºÏùÑ Ï†úÍ±∞Ìï† Î¨∏Îã®ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
                    }
                    
                    this.focus(context);
                    
                } catch (error) {
                    this.handleError(error, 'clearParagraphStyle');
                }
            },
            
            createHelp: function(context) {
                return {
                    title: 'Î¨∏Îã® Ïä§ÌÉÄÏùº',
                    content: [
                        '<h4>Î¨∏Îã® Ïä§ÌÉÄÏùº Í∏∞Îä•</h4>',
                        '<p>Îã§ÏñëÌïú Î¨∏Îã® Ïä§ÌÉÄÏùºÏùÑ Ï†ÅÏö©ÌïòÏó¨ ÏΩòÌÖêÏ∏†Î•º ÎçîÏö± Ìö®Í≥ºÏ†ÅÏúºÎ°ú ÌëúÌòÑÌï† Ïàò ÏûàÏäµÎãàÎã§.</p>',
                        '<ul>',
                        '<li><strong>Îã®Ï∂ïÌÇ§:</strong> Ctrl+Shift+S</li>',
                        '<li><strong>Ïù∏Ïö©Íµ¨:</strong> Ï§ëÏöîÌïú Ïù∏Ïö©Î¨∏ Í∞ïÏ°∞</li>',
                        '<li><strong>ÏÜåÏ†úÎ™©:</strong> ÏÑπÏÖò Ï†úÎ™© Ïä§ÌÉÄÏùº</li>',
                        '<li><strong>Í∞ïÏ°∞ Î∞ïÏä§:</strong> Ï£ºÏöî ÎÇ¥Ïö© ÌïòÏù¥ÎùºÏù¥Ìä∏</li>',
                        '<li><strong>Ï†ïÎ≥¥ ÏïàÎÇ¥:</strong> Ïú†Ïö©Ìïú ÌåÅÏù¥ÎÇò Ï†ïÎ≥¥</li>',
                        '<li><strong>Ï£ºÏùòÏÇ¨Ìï≠:</strong> Í≤ΩÍ≥†ÎÇò Ï£ºÏùòÌï† Ï†ê</li>',
                        '</ul>',
                        '<p><strong>ÏÇ¨Ïö©Î≤ï:</strong> ÌÖçÏä§Ìä∏Î•º ÏÑ†ÌÉùÌïòÍ≥† ÏõêÌïòÎäî Ïä§ÌÉÄÏùºÏùÑ ÌÅ¥Î¶≠ÌïòÏÑ∏Ïöî.</p>'
                    ].join('')
                };
            }
        });
        
        if (typeof $ !== 'undefined' && $(document)) {
            $(document).trigger('board-templates-plugin-loaded', ['paragraphStyles']);
        }
    });
    
})();